# Installing Docker on Amazon Linux server
1. Amazon Linux EC2 Instance
2. Install docker and start docker services
   yum install docker -y
   docker --version   
# start docker services
   service docker start
   service docker status
3. Create a user called dockeradmin
   useradd dockeradmin
   passwd dockeradmin
4. add a user to docker group to manage docker 
   usermod -aG docker dockeradmin
### Validation test
5. Create a tomcat docker container by pulling a docker image from the public docker registry
   docker run -d --name test-tomcat-server -p 8090:8080 tomcat:latest
How to create Docker container?
To create a docker container we need a docker image with the help of docker image we can run the command called docker run with some additional specifications to create a docker container
Now how do we get this docker image?
Docker image we an get it in 2 ways. They are:
(1)Dockerhub ->It is a public repository which contains the docker images we can use the command called "docker  pull" to take the image on to our local repository.
(2)Creating our own Dockerfile - pull the basic image from dockerhub on top of that we can do own customization with the help of Dockerfile.
	- Dockerfile contains instructions what your docker container should do to create a docker image out of dockerfile we are going to use docker build command.
	https://hub.docker.com/
	tomcat - pull latest basic image form dockerhub and create a customization container on top of it
Unable to launch container in browser will see below troubleshooting issue:-
---------------------------------------------------------------------------
Because it is looking inside container webapp folder but originally its located on webapps.dist folder (all files)
Inside container -> Inside webapps.dist folder - "cp -R * ../webapps/"

Here will get the same issue on every new tomcat container. To overcome this issue will do with Dockerfile below,
Write first dockerfile?
----------------------
FROM: To pull the base image
RUN: To execute shell commands
CMD: To provides default for an executing container at the time of execution container (OVERWRITTEN)
ENTRYPOINT: To configure a container that will run as an executable (NOT OVERWRITTEN)
WORKDIR:To switch the directory inside the cotainer
COPY: copy a directory from local host to docker container
ADD: copy files and folders from local machine to docker containers and also using wget command to download any of the packages form browser
EXPOSE: Informs docker that the container listens on the specified network ports at runtime (insode the container application running some port number those applications are exposing to external network)
ENV: To set envirnemnt variables

vi Dockerfile:
FROM spack/centos7
RUN yum install java -y
RUN mkdir /opt/tomcat
WORKDIR /opt/tomcat
ADD https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.14/bin/apache-tomcat-10.1.14.tar.gz .
RUN tar -xvzf apache-tomcat-10.1.14.tar.gz
RUN mv apache-tomcat-10.1.14/* /opt/tomcat
EXPOSE 8080
CMD ["/opt/tomcat/bin/catalina.sh", "run"]

FROM spack/centos7
RUN yum install java -y
RUN mkdir /opt/tomcat
WORKDIR /opt/tomcat
#If we will use RUN Instruction will go and add wget but ADD Instruction no need to add any wget directly will add the url
ADD https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.14/bin/apache-tomcat-10.1.14.tar.gz .
RUN tar -xvzf apache-tomcat-10.1.14.tar.gz
RUN mv apache-tomcat-10.1.14/* /opt/tomcat
EXPOSE 8080
CMD ["/opt/tomcat/bin/catalina.sh", "run"]

#Catalina home directory
FROM tomcat:latest
RUN cp -R /usr/local/tomcat/webapps.dist/* /usr/local/tomcat/webapps

docker build -t tomcat .
docker run -d --name tomcat-container -port 8081:8080 tomcat

Integrate Docker with Jenkins:
-----------------------------
Create dockeradmin user
Install "publish over ssh plugin"
Add Docker server to Jenkins "configure systems"

Note:Bydefault ec2 instances  doesn't allows password based authentications we should explicitly enable it.
vi /etc/ssh/sshd_config - Search password authentication 'yes'
service sshd reload

TestProject:
-----------
1. Launch an EC2 instance for Docker Server
2. Install docker on EC2 instance and start services
  yum install docker
  service docker start
3. create a new user for Docker management and add him to Docker (default) group
useradd dockeradmin
passwd dockeradmin
usermod -aG docker dockeradmin
4. Write a Docker file under /opt/docker
mkdir /opt/docker
### vi Dockerfile ###
# Pull base image 
From tomcat:8-jre8 
# copy war file on to container 
COPY ./webapp.war /usr/local/tomcat/webapps
5. Login to Jenkins console and add Docker server to execute commands from Jenkins  
Manage Jenkins --> Configure system -->  Publish over SSH --> add Docker server and credentials
6. Create Jenkins job 
A) Source Code Management  
 Repository : https://github.com/DevOps07071993/hello-world.git  
 Branches to build : */main

B) Build
 Root POM: pom.xml  
 Goals and options : clean install package  
 
C) send files or execute commands over SSH
 Name: DockerServer 
 Source files	: webapp/target/*.war
 Remove prefix	: webapp/target
 Remote directory	: `//opt//docker`  
 Exec command[s]	: 
  docker stop tomcat-container;
  docker rm -f tomcat-container;
  docker rmi -f tomcat;
  cd /opt/docker;
  docker build -t tomcat .
D) send files or execute commands over SSH  
  Name: DockerServer
  Exec command	: docker run -d --name tomcat-container -p 8090:8080 tomcat  
7. Login to Docker host and check images and containers. (no images and containers)
8. Execute Jenkins job
9. check images and containers again on Docker host. This time an image and container get creates through Jenkins job
10. Access web application from browser which is running on container
<docker_host_Public_IP>:8082/webapp
